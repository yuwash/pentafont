{"version":3,"sources":["pentafont.js"],"names":["config","encoding","renderer","fontSize","fontWidth","lineHeight","letterSpacing","minWidth","encodingDotsies","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","_31","encodingEtaisparse","_29","_30","encodingLatinoid","renderByte","bitRenderer","byte_","width","height","reduce","accumulator","bit","push","renderByteEtaionsparse","grid","renderByteDotsies","latinoidPolygons","renderByteLatinoid","map","x_","y_","renderLetters","text","Array","from","character","bruttoLetterWidth","bruttoLineHeight","lastPos","length","addRow","getEncoding","getRenderer","characterToRender","toLowerCase","fontHeight","polygons","pointsFormat","points","point","name","etaionsparse","dotsies","latinoid","getWidth","parentElement","document","getElementById","parentWidth","getBoundingClientRect","ractive","Ractive","target","template","data","imageFilename","imageURL","updateImageFilename","set","get","substring","updateImageURL","find","linkElement","renderElement","svgFile","Blob","innerHTML","type","URL","createObjectURL","observe","onrender","window","addEventListener"],"mappings":"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","file":"pentafont.3c2c2442.js","sourceRoot":"../pentafont","sourcesContent":["const config = {\n  encoding: 'etaionsparse',\n  renderer: 'etaionsparse',\n  fontSize: 15,\n  fontWidth: 0.2,  // monospace for now\n  lineHeight: 1.5,\n  letterSpacing: 0,\n  minWidth: 640,\n}\n\nconst encodingDotsies = {\n  ' ': 0,\n  a: 0b00001,\n  b: 0b00010,\n  c: 0b00100,\n  d: 0b01000,\n  e: 0b10000,\n  f: 0b00011,\n  g: 0b00110,\n  h: 0b01100,\n  i: 0b11000,\n  j: 0b00101,\n  k: 0b01010,\n  l: 0b10100,\n  m: 0b01001,\n  n: 0b10010,\n  o: 0b10001,\n  p: 0b00111,\n  q: 0b01011,\n  r: 0b01101,\n  s: 0b01110,\n  t: 0b10110,\n  u: 0b11010,\n  v: 0b11100,\n  w: 0b10011,\n  x: 0b10101,\n  y: 0b11001,\n  z: 0b01111,\n  _31: 0b11111,\n}\n\nconst encodingEtaisparse = {\n  ' ': 0,\n  a: 0b01000,\n  b: 0b00111,\n  c: 0b01010,\n  d: 0b00101,\n  e: 0b00010,\n  f: 0b00110,\n  g: 0b11100,\n  h: 0b11000,\n  i: 0b10001,\n  j: 0b01101,\n  k: 0b11010,\n  l: 0b10100,\n  m: 0b10101,\n  n: 0b10000,\n  o: 0b00100,\n  p: 0b01100,\n  q: 0b10110,\n  r: 0b01001,\n  s: 0b10010,\n  t: 0b00001,\n  u: 0b00011,\n  v: 0b11001,\n  w: 0b01011,\n  x: 0b01110,\n  y: 0b10011,\n  z: 0b11011,\n  '.': 0b01111,\n  ',': 0b10111,\n  _29: 0b11101,\n  _30: 0b11110,\n  _31: 0b11111,\n}\n\nconst encodingLatinoid = {\n  ' ': 0,\n  a: 0b11000,\n  b: 0b01101,\n  c: 0b10010,\n  d: 0b01001,\n  e: 0b10110,\n  f: 0b01110,\n  g: 0b11010,\n  h: 0b11001,\n  i: 0b00001,\n  j: 0b00010,\n  k: 0b11101,\n  l: 0b00101,\n  m: 0b11100,\n  n: 0b10011,\n  o: 0b00100,\n  p: 0b01100,\n  q: 0b10100,\n  r: 0b11110,\n  s: 0b10001,\n  t: 0b10101,\n  u: 0b00110,\n  v: 0b00011,\n  w: 0b00111,\n  x: 0b11011,\n  y: 0b01011,\n  z: 0b01010,\n  '.': 0b10000,\n  ',': 0b01000,\n  _29: 0b01111,\n  _30: 0b10111,\n  _31: 0b11111,\n}\n\nconst renderByte = (bitRenderer, byte_, x, y, width, height) => (\n  [0, 1, 2, 3, 4]\n).reduce((accumulator, bit) => {\n  if (0 < (byte_ >> bit) % 2) {\n    accumulator.push(bitRenderer(bit, x, y, width, height))\n  }\n  return accumulator\n}, [])\n\nconst renderByteEtaionsparse = (byte_, x, y, width, height) => renderByte((\n    bit, x, y, width, height) => {\n  const grid = [\n    [x, y],  // 0\n    [x, y + height / 2],  // 1\n    [x, y + height],  // 2\n    [x + width, y],  // 3\n    [x + width, y + height / 3],  // 4\n    [x + width, y + height * 2 / 3],  // 5\n    [x + width, y + height],  // 6\n  ]\n  if (bit == 0) {\n    return [ grid[0], grid[4], grid[3] ]\n  } else if (bit == 1) {\n    return [ grid[0], grid[1], grid[4] ]\n  } else if (bit == 2) {\n    return [ grid[1], grid[5], grid[4] ]\n  } else if (bit == 3) {\n    return [ grid[1], grid[2], grid[5] ]\n  } else if (bit == 4) {\n    return [ grid[2], grid[6], grid[5] ]\n  }\n}, byte_, x, y, width, height)\n\nconst renderByteDotsies = (byte_, x, y, width, height) => renderByte((\n    bit, x, y, width, height) => [\n  [x, y + bit * height / 5],\n  [x, y + (bit + 1) * height / 5],\n  [x + width, y + (bit + 1) * height / 5],\n  [x + width, y + bit * height / 5],\n], byte_, x, y, width, height)\n\nconst latinoidPolygons = [\n  [ [0, 0], [1, 5], [2, 5], [2, 0] ],\n  [ [4, 0], [2, 5], [4, 5], [5, 2] ],\n  [ [1, 5], [1, 6], [5, 6], [4, 5] ],\n  [ [1, 6], [0, 8], [2, 10], [3, 6] ],\n  [ [2, 6], [4, 10], [5, 10], [4, 6] ],\n]\n\nconst renderByteLatinoid = (byte_, x, y, width, height) => renderByte((\n    bit, x, y, width, height) => {\n  return latinoidPolygons[bit].map(([x_, y_]) => [\n    x + x_ * width / 5, y + y_ * height / 10])\n}, byte_, x, y, width, height)\n\nconst renderLetters = (text, width, config) => (\n  Array.from(text)\n).reduce((accumulator, character) => {\n  const bruttoLetterWidth = config.fontSize * (\n    config.fontWidth + config.letterSpacing)\n  const bruttoLineHeight = config.fontSize * config.lineHeight\n  const lastPos = accumulator.length ? accumulator[accumulator.length - 1] : {\n    x: -bruttoLetterWidth, y: 0 }\n  const addRow = width < lastPos.x + 2 * bruttoLetterWidth\n  // 2 times because the last letter and this letter follows lastPos\n  const x = addRow ? 0 : lastPos.x + bruttoLetterWidth\n  const y = lastPos.y + (addRow ? bruttoLineHeight : 0)\n  const encoding = getEncoding(config.encoding)\n  const renderer = getRenderer(config.renderer)\n  let characterToRender = character.toLowerCase()\n  if (!(characterToRender in encoding)) {\n    characterToRender = '_31'\n  }\n  const fontHeight = config.fontSize\n  const fontWidth = config.fontSize * config.fontWidth\n  accumulator.push({\n    polygons: renderer(\n      encoding[characterToRender], x, y, fontWidth, fontHeight),\n    x: x,\n    y: y,\n  })\n  return accumulator\n}, [])\n\nconst pointsFormat = points => points.reduce((accumulator, point) => {\n  return accumulator + `${point[0]},${point[1]} `  // FIXME trailing space\n}, '')\n\nconst getEncoding = name => ({\n  etaionsparse: encodingEtaisparse,\n  dotsies: encodingDotsies,\n  latinoid: encodingLatinoid,\n}[name] || encodingEtaisparse)\n\nconst getRenderer = name => ({\n  etaionsparse: renderByteEtaionsparse,\n  dotsies: renderByteDotsies,\n  latinoid: renderByteLatinoid,\n}[name] || renderByteEtaionsparse)\n\nconst getWidth = () => {\n  const parentElement = document.getElementById('render-view')\n  if (!parentElement) {\n    return config.minWidth\n  }\n  const parentWidth = parentElement.getBoundingClientRect().width\n  return config.minWidth < parentWidth ? parentWidth : config.minWidth\n}\n  \nconst ractive = new Ractive({\n  target: '#reactive-target',\n  template: '#reactive-template',\n  data: {\n    config: config,\n    text: 'etaion shrdl ucmfw ypvbgk jqxz,.;',\n    imageFilename: 'untitled.svg',\n    imageURL: '#',\n    width: config.minWidth,\n    pointsFormat: pointsFormat,\n    renderLetters: renderLetters,\n    updateImageFilename: function () {\n      this.set(\n        'imageFilename',\n        `${ (this.get('text') || 'untitled').substring(0, 15) }.svg`)\n    },\n    updateImageURL: function () {\n      const linkElement = this.find('#image-link')\n      const renderElement = this.find('#render-view')\n      const svgFile = new Blob([renderElement.innerHTML], { type: 'text/svg' })\n      this.set('imageURL', URL.createObjectURL(svgFile))\n    },\n  },\n  observe: {\n    'text': function () {\n      this.get('updateImageFilename')()\n    },\n    'text width config.*': function () {\n      this.get('updateImageURL')()\n    },\n  },\n  onrender: function () {\n    this.set('width', getWidth())\n  },\n})\n\nwindow.addEventListener('resize', () => ractive.onrender())\n"]}